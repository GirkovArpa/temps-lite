const initDatabase = function(storage) {
  storage.root = {
    VERSION: "1.1.5",
    LOCATION: "New York",
    UNITS: "imperial",
    TIME_FORMAT: "12h",
    API_KEY: "",
    WEATHER_IN_TRAY_ICON: true,
    START_ON_LOGIN: false,
    LANG: "English"
  };
  return storage.root;
}

const storage = Storage.open("database.bin");
const root = storage.root || initDatabase(storage);
// backwards compatibility
if (storage.root.LANG == undefined) {
  storage.root.LANG = "English";
}

$(#city) << event change { root.LOCATION = this.value; }
$(#api-key) << event change { root.API_KEY = this.value; }
$(#C) << event click { root.UNITS = "metric"; }
$(#F) << event click { root.UNITS = "imperial"; }
$(#military-time) << event click { root.TIME_FORMAT = "24h"; }
$(#normal-time) << event click { root.TIME_FORMAT = "12h"; }
$(#trayicon-weather) << event click { 
  root.WEATHER_IN_TRAY_ICON = !this.state.checked; 
  updateTrayIcon();
};

async function createDir(path){
  await System.mkdir(path);
}

$(#autostart) << event click { 
  root.START_ON_LOGIN = this.state.checked;
  switch(System.PLATFORM) {
    case #Windows:
    break;
    
    case #OSX:
    break;
    
    case #Linux:
    {
      const autodir = System.path(#USER_HOME,".config/autostart");
      if(!System.scanFiles(autodir)) {
        createDir(autodir);
      }
      const path = System.path(#USER_HOME,".config/autostart/temps-lite.desktop");
      
      //TODO: Check .state.checked value is opposite of button|checkbox here
      //debug info: this.state.checked;
      if(!this.state.checked) {
        const appName = "temps-lite";
        const appPath = URL.toPath(self.url("./scapp"));
        const data = String.$([Desktop Entry]
            Type=Application
            Version=1.0
            Name={appName}
            Comment={appName} autostart script
            Exec={appPath}
            StartupNotify=false
            Terminal=false
        )
        const stream = Stream.openFile(path,"uw");    
        if( !stream ) {
          view.msgbox(#warning, "Cannot open file "+ path +" for writing. Settings will not be saved." );
          return;
        }
        stream.printf("%s",data);
        stream.close();
      }
      else {
        System.unlink(path)
          .then(
            :: root.START_ON_LOGIN = false
          )
          .catch(function err(e){
             throw String.$(Cant unlink/remove {path} );
          });
      }
    }  
    break;
  }

};

$(#city).value = root.LOCATION;
$(#api-key).value = root.API_KEY;

for (var radio in $$([name=temp])) {
  radio.state.checked = false;
}

root.UNITS === "metric" 
  ? $(#C).state.checked = true 
  : $(#F).state.checked = true;

for (var radio in $$([name=time])) {
  radio.state.checked = false;
}

root.TIME_FORMAT === "24h" 
  ? $(#military-time).state.checked = true 
  : $(#normal-time).state.checked = true;

$(#trayicon-weather).state.checked = root.WEATHER_IN_TRAY_ICON;
$(#autostart).state.checked = root.START_ON_LOGIN;
$(#lang).value = root.LANG;
